<?php

namespace Main\CommonBundle\Entity\Messages;

use Doctrine\ORM\EntityRepository;

/**
 * CommuneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends EntityRepository
{	
	/**
	 * [getUnreadPrestationMessages description]
	 * @param  [type] $user [description]
	 * @return [type]       [description]
	 */
	public function getUnreadPrestationsNotifications($user) {
		$qb = $this->_em->createQueryBuilder();
		$qb->select('n')
			->from('MainCommonBundle:Messages\Notification', 'n')
			->where('n.receiver = :user')
			->andWhere('n.read = :status')
			->andWhere('n.type = :type')
			->setParameters(array(
					'user'  	=> $user,
					'status'	=> 0,
					'type'		=> 1 //Concerne les prestations uniquement
				));
		$query = $qb->getQuery();
		$query->setResultCacheId('getUnreadPrestationsNotifications_'.$user);
		$query->useQueryCache(true);
		$query->useResultCache(true, 3600, 'getUnreadPrestationsNotifications_'.$user);//1h
		return $query->getResult();
	}
	
	/**
	 * [getUnreadPrestationMessages description]
	 * @param  [type] $user       [description]
	 * @param  [type] $prestation [description]
	 * @return [type]             [description]
	 */
	public function getUnreadPrestationNotifications($user, $prestation)
	{
		$qb = $this->_em->createQueryBuilder();
		$qb->select('n')
			->from('MainCommonBundle:Messages\Notification', 'n')
			->where('n.receiver = :user')
			->andWhere('n.read = :status')
			->andWhere('n.prestation = :prestation')
			->setParameters(array(
					'user'  		=> $user,
					'status'		=> 0,
					'prestation'	=> $prestation //Concerne les prestations uniquement
				));
		$query = $qb->getQuery();
		$query->setResultCacheId('getUnreadPrestationNotifications_'.$user.'_'.$prestation);
		$query->useQueryCache(true);
		$query->useResultCache(true, 3600, 'getUnreadPrestationNotifications_'.$user.'_'.$prestation);//1h
		return $query->getResult();
	}
	
}